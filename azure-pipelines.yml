# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '10fee736-323c-4f06-8320-87f09d6172f1'

  # Web app name
  webAppName: 'hittegods'

  # Environment name
  environmentName: 'hittegods'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        yarn install
        yarn run build
      displayName: 'npm install, build and test'

      # Copy files
      # Copy files from a source folder to a target folder using patterns matching file paths (not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/packages/backend/dist'
        contents: |
          **/*
        targetFolder: '$(build.artifactstagingdirectory/dist)'
        #cleanTargetFolder: false # Optional
        #overWrite: false # Optional
        #flattenFolders: false # Optional
        #preserveTimestamp: false # Optional

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/packages/grizzly/build'
        contents: |
          **/*
        targetFolder: '$(build.artifactstagingdirectory/build)'
        #cleanTargetFolder: false # Optional
        #overWrite: false # Optional
        #flattenFolders: false # Optional
        #preserveTimestamp: false # Optional

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/packages/backend/packages.json'
        contents: |
          **/*
        targetFolder: '$(build.artifactstagingdirectory/)'
        #cleanTargetFolder: false # Optional
        #overWrite: false # Optional
        #flattenFolders: false # Optional
        #preserveTimestamp: false # Optional

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/packages/backend/node_modules'
        contents: |
          **/*
        targetFolder: '$(build.artifactstagingdirectory/node_modules)'
        #cleanTargetFolder: false # Optional
        #overWrite: false # Optional
        #flattenFolders: false # Optional
        #preserveTimestamp: false # Optional

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(build.artifactstagingdirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(build.artifactstagingdirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: hittegods'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'
